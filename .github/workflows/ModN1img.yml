name: Build Custom OpenWrt

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install required packages
        run: |
          echo "正在更新软件包列表..."
          sudo apt-get update
          echo "正在安装必需的软件包..."
          sudo apt-get install -y fdisk gzip mount wget tar

      - name: Download and Modify OpenWrt image
        run: |
          echo "==================== 开始处理镜像文件 ===================="
          
          # 下载镜像文件
          echo "正在下载 OpenWrt 镜像文件..."
          wget -q --show-progress https://github.com/ju-svg/amlogic-s9xxx-openwrt/releases/download/OpenWrt_imagebuilder_openwrt_23.05.5_12.26.1248/openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.gz
          echo "镜像下载完成"
          
          # 创建工作目录
          echo "创建工作目录..."
          WORK_DIR="openwrt_mod"
          mkdir -p "$WORK_DIR"
          cd "$WORK_DIR"
          echo "工作目录创建完成: $(pwd)"
          
          # 解压 .gz 镜像
          echo "正在解压镜像文件..."
          gzip -d ../openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.gz
          echo "镜像解压完成"
          
          # 创建挂载点
          echo "创建挂载点..."
          mkdir -p mount_point
          echo "挂载点创建完成: $(pwd)/mount_point"
          
          # 获取分区信息
          echo "==================== 分区信息 ===================="
          fdisk -l ../openwrt_amlogic_s905d_k6.1.121_2024.12.26.img
          
          # 使用 losetup 设置循环设备
          echo "设置循环设备..."
          LOOP_DEV=$(sudo losetup -f)
          sudo losetup "$LOOP_DEV" ../openwrt_amlogic_s905d_k6.1.121_2024.12.26.img
          echo "循环设备设置完成: $LOOP_DEV"
          
          # 扫描分区表
          echo "扫描分区表..."
          sudo partprobe "$LOOP_DEV"
          echo "分区表扫描完成"
          
          # 获取第二个分区（通常是根文件系统）
          PART_DEV="${LOOP_DEV}p2"
          echo "目标分区: $PART_DEV"
          
          # 挂载分区
          echo "正在挂载分区 $PART_DEV 到 $(pwd)/mount_point..."
          sudo mount "$PART_DEV" mount_point
          echo "分区挂载完成"
          
          # 解压自定义文件
          echo "==================== 添加自定义文件 ===================="
          echo "正在解压 custom-files.tar.gz..."
          echo "开始复制文件..."
          sudo tar -xvf ../custom-files.tar.gz -C mount_point/
          echo "自定义文件解压完成"
          
          # 验证关键文件
          echo "==================== 验证关键文件 ===================="
          echo "检查 clash 相关文件..."
          if [ -f "mount_point/usr/bin/clash" ]; then
            echo "clash 二进制文件: $(ls -l mount_point/usr/bin/clash)"
          else
            echo "警告: clash 二进制文件不存在"
          fi
          
          if [ -f "mount_point/etc/init.d/clash" ]; then
            echo "clash 启动脚本: $(ls -l mount_point/etc/init.d/clash)"
            echo "启动脚本内容:"
            sudo cat mount_point/etc/init.d/clash
          else
            echo "警告: clash 启动脚本不存在"
          fi
          
          if [ -d "mount_point/etc/clash" ]; then
            echo "clash 配置目录内容:"
            sudo ls -lR mount_point/etc/clash
          else
            echo "警告: clash 配置目录不存在"
          fi
          
          # 设置文件权限
          echo "==================== 设置文件权限 ===================="
          if [ -f "mount_point/usr/bin/clash" ]; then
            echo "设置 clash 可执行权限..."
            sudo chmod 755 mount_point/usr/bin/clash
            echo "clash 权限设置完成: $(ls -l mount_point/usr/bin/clash)"
          fi
          
          if [ -d "mount_point/etc/clash" ]; then
            echo "设置 clash 配置目录权限..."
            sudo chmod -R 755 mount_point/etc/clash
            sudo find mount_point/etc/clash -type f -exec chmod 644 {} \;
            echo "clash 配置目录权限设置完成:"
            ls -lR mount_point/etc/clash
          fi
          
          # 检查并设置启动脚本权限
          if [ -f "mount_point/etc/init.d/clash" ]; then
            echo "设置 clash 启动脚本权限..."
            sudo chmod 755 mount_point/etc/init.d/clash
            echo "启动脚本权限设置完成: $(ls -l mount_point/etc/init.d/clash)"
            
            echo "创建开机启动链接..."
            sudo ln -sf ../init.d/clash mount_point/etc/rc.d/S99clash
            echo "开机启动链接创建完成: $(ls -l mount_point/etc/rc.d/S99clash)"
          fi
          
          # 同步文件系统
          echo "==================== 同步文件系统 ===================="
          echo "正在同步文件系统..."
          sync
          echo "文件系统同步完成"
          
          # 卸载分区
          echo "==================== 清理挂载 ===================="
          echo "正在卸载分区..."
          sudo umount mount_point
          echo "正在清理循环设备..."
          sudo losetup -d "$LOOP_DEV"
          echo "清理完成"
          
          # 重新压缩镜像
          echo "==================== 重新压缩镜像 ===================="
          cd ..
          echo "正在压缩镜像文件..."
          xz -9ef openwrt_amlogic_s905d_k6.1.121_2024.12.26.img
          echo "镜像压缩完成"
          
          # 清理临时文件
          echo "清理临时文件..."
          rm -rf "$WORK_DIR"
          echo "临时文件清理完成"
          
          echo "==================== 所有操作已完成 ===================="

      - name: Generate SHA256 checksum
        run: |
          cd $GITHUB_WORKSPACE
          sha256sum openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.xz > openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.xz.sha
          
      - name: Set date
        run: echo "DATE=$(date +%Y.%m.%d)" >> $GITHUB_ENV
        
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@main
        with:
          tag: OpenWrt_s905d_${{ github.run_number }}_${{ env.DATE }}
          name: OpenWrt S905D Phicomm-N1 ${{ github.run_number }}
          artifacts: |
            openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.xz
            openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.xz.sha
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ### OpenWrt for Amlogic S905D Phicomm-N1
            - 内核版本：6.1.121
            - 编译日期：2024.12.26
            
            ### 默认配置信息
            - 默认 IP: 192.168.50.252
            - 默认用户名: root
            
            ### 安装说明
            1. 使用 USB 启动
               - 将固件写入 USB 设备
               - 插入设备并启动
            
            2. 安装到 EMMC（推荐）
               - 登录 OpenWrt
               - 进入 System → Amlogic Service
               - 选择 Install OpenWrt
            
            ### 文件校验
            - 请下载 .sha 文件并使用以下命令验证：
              ```bash
              sha256sum -c openwrt_amlogic_s905d_k6.1.121_2024.12.26.img.xz.sha
              ```
            
            ### 注意事项
            - 首次使用请及时修改默认密码
            - 建议安装到 EMMC 以获得更好的性能
            
            _发布时间：${{ env.DATE }}_
